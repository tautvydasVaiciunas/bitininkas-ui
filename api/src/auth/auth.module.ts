import { Module } from '@nestjs/common';import { JwtModule } from '@nestjs/jwt';import { PassportModule } from '@nestjs/passport';import { TypeOrmModule } from '@nestjs/typeorm';import { AuthService } from './auth.service';import { AuthController } from './auth.controller';import { UsersModule } from '../users/users.module';import { User } from '../users/user.entity';import { JwtStrategy } from './jwt.strategy';import { ConfigModule, ConfigService } from '@nestjs/config';import { ActivityLogModule } from '../activity-log/activity-log.module';@Module({  imports: [    ConfigModule,    PassportModule,    JwtModule.registerAsync({      inject: [ConfigService],      useFactory: (config: ConfigService) => ({        secret: config.get<string>('JWT_SECRET'),        signOptions: { expiresIn: '15m' },      }),    }),    TypeOrmModule.forFeature([User]),    UsersModule,    ActivityLogModule,  ],  providers: [AuthService, JwtStrategy],  controllers: [AuthController],})export class AuthModule {}